/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 --instanceall road.glb
*/

import React, { useRef, useMemo, useContext, createContext } from 'react'
import { useGLTF, Merged } from '@react-three/drei'

const context = createContext()

export function RoadInstances({ children, ...props }) {
  const { nodes } = useGLTF('/models/road.glb')
  const instances = useMemo(
    () => ({
      Group: nodes.group336620870,
      Group1: nodes.group1850925880,
      Group2: nodes.group1517981274,
      Group3: nodes.group1266234480,
      Group4: nodes.group1691973700,
      Group5: nodes.group1797842388,
      Group6: nodes.group231937087,
      Group7: nodes.group1437559802,
    }),
    [nodes]
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export function Road(props) {
  const instances = useContext(context)
  return (
    <group {...props} dispose={null}>
      <instances.Group />
      <instances.Group1 />
      <instances.Group2 />
      <instances.Group3 />
      <instances.Group4 />
      <instances.Group5 />
      <instances.Group6 />
      <instances.Group7 />
    </group>
  )
}

useGLTF.preload('/models/road.glb')
